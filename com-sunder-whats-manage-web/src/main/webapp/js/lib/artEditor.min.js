/**
 * 移动端富文本编辑器
 * 
 * @author ganzw@gmail.com
 * @url https://github.com/baixuexiyang/artEditor
 */
$.fn.extend({
    _opt: {
        validHtml: [],
        limitSize: 3,
        showServer:true
    },
    artEditor: function(e) {
        var t = this,
        a = {
            "-webkit-user-select": "text",
            "user-select": "text",
            "overflow-y": "auto",
            "text-break": "brak-all",
            outline: "none"
        };
        $(this).css(a).attr("contenteditable", !0),
        t._opt = $.extend(t._opt, e);
        try {
            $(t._opt.imgTar).on("change",
            function(e) {
                var data = e.target.files[0];
                e.target.value = '';
               if(Math.ceil(data.size/1024/1024) > t._opt.limitSize) {
					console.error('文件太大');
					alert('文件太大');
					return;
				}
                var formData = new FormData();
        		formData.append("file",data);
        		
        		var ShortUuid = $("#ShortUuid").val();
        		console.log("ShortUuid:" + ShortUuid);
        		formData.append("ShortUuid",ShortUuid);

                var r = new FileReader;
                r.readAsDataURL(data),
                r.onload = function(e) { 
                	if (t._opt.showServer) return void t.upload(formData);
                    var a = '<img src="' + e.target.result + '" style="width:90%;" />';
                    t.insertImage(a);
                }
            }),
            t.placeholderHandler(),
            t.pasteHandler()
        } catch(r) {
            console.log(r)
        }
        t._opt.formInputId && $("#" + t._opt.formInputId)[0] && $(t).on("input",
        function() {
            $("#" + t._opt.formInputId).val(t.getValue())
        })
    },
    upload: function(formData) {
        {
            var t = this;
            t._opt.uploadField
        }
        $.ajax({
            url: t._opt.uploadUrl,
        	type : 'POST', 
            data: formData,
        	processData : false, 
            contentType : false,
            cache: false
        }).then(function(e) {
            var a = t._opt.uploadSuccess(e);
            if (a) {
                var r = '<img src="' + a + '" style="width:90%;" /> <br/>';
                t.insertImage(r)
                var a = t._opt.saveSuccess(t.getValue());
            } else t._opt.uploadError(e)
        })
    },
    insertImage: function(e) {
        $(this).focus();
        var t = window.getSelection ? window.getSelection() : document.selection,
        a = t.createRange ? t.createRange() : t.getRangeAt(0);
        if (window.getSelection) {
            a.collapse(!1);
            for (var r = a.createContextualFragment(e), o = r.lastChild; o && "br" == o.nodeName.toLowerCase() && o.previousSibling && "br" == o.previousSibling.nodeName.toLowerCase();) {
                var l = o;
                o = o.previousSibling,
                r.removeChild(l)
            }
            a.insertNode(a.createContextualFragment("<br/>")),
            a.insertNode(r),
            o && (a.setEndAfter(o), a.setStartAfter(o)),
            t.removeAllRanges(),
            t.addRange(a)
        } else a.pasteHTML(e),
        a.collapse(!1),
        a.select();
        this._opt.formInputId && $("#" + this._opt.formInputId)[0] && $("#" + this._opt.formInputId).val(this.getValue())
    },
    pasteHandler: function() {
        var e = this;
        $(this).on("paste",
        function(t) {
            console.log(t.clipboardData.items);
            var a = $(this).html();
            console.log(a),
            valiHTML = e._opt.validHtml,
            a = a.replace(/_moz_dirty=""/gi, "").replace(/\[/g, "[[-").replace(/\]/g, "-]]").replace(/<\/ ?tr[^>]*>/gi, "[br]").replace(/<\/ ?td[^>]*>/gi, "&nbsp;&nbsp;").replace(/<(ul|dl|ol)[^>]*>/gi, "[br]").replace(/<(li|dd)[^>]*>/gi, "[br]").replace(/<p [^>]*>/gi, "[br]").replace(new RegExp("<(/?(?:" + valiHTML.join("|") + ")[^>]*)>", "gi"), "[$1]").replace(new RegExp('<span([^>]*class="?at"?[^>]*)>', "gi"), "[span$1]").replace(/<[^>]*>/g, "").replace(/\[\[\-/g, "[").replace(/\-\]\]/g, "]").replace(new RegExp("\\[(/?(?:" + valiHTML.join("|") + "|img|span)[^\\]]*)\\]", "gi"), "<$1>"),
            /firefox/.test(navigator.userAgent.toLowerCase()) || (a = a.replace(/\r?\n/gi, "<br>")),
            $(this).html(a)
        })
    },
    placeholderHandler: function() {
        var e = this;
        $(this).on("focus",
        function() {
            $.trim($(this).html()) === e._opt.placeholader && $(this).html("")
        }).on("blur",
        function() {
            $(this).html() || $(this).html(e._opt.placeholader)
        }),
        $.trim($(this).html()) || $(this).html(e._opt.placeholader)
    },
    getValue: function() {
        return $(this).html()
    },
    setValue: function(e) {
        $(this).html(e)
    }
});