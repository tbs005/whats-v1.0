<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
 http://www.springframework.org/schema/beans/spring-beans-3.1.xsd 
 http://www.springframework.org/schema/context 
 http://www.springframework.org/schema/context/spring-context-3.1.xsd 
 http://www.springframework.org/schema/mvc 
 http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">


	<!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
	<context:component-scan base-package="com.sunder.xie.whats.sso" />
	<!--避免IE执行AJAX时，返回JSON出现下载文件 -->
	<bean id="mappingJacksonHttpMessageConverter"
		class="com.sunder.xie.whats.common.spring.CallbackMappingJackson2HttpMessageConverter">
		<property name="callbackName" value="callback" />
	</bean>
	<bean id="stringHttpMessageConverter"
		class="org.springframework.http.converter.StringHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>


	<!-- 注解驱动 -->
	<mvc:annotation-driven>
		<mvc:message-converters>
			<ref bean="stringHttpMessageConverter" />
			<ref bean="mappingJacksonHttpMessageConverter" />
		</mvc:message-converters>
	</mvc:annotation-driven>
	<!-- 静态资源被'/'拦截问题 只能解决'/'拦截的静态资源, 其他的需要通过下面方式进行资源映射 -->
	<mvc:default-servlet-handler />
	<!-- 资源映射 -->
	<!-- 资源映射 -->
	<!-- <mvc:resources location="/WEB-INF/css/" mapping="/css/**"/> <mvc:resources 
		location="/WEB-INF/js/" mapping="/js/**"/> <mvc:resources location="/WEB-INF/images/" 
		mapping="/images/**"/> -->
	<mvc:resources location="/" mapping="/**/*.html" />
	<mvc:resources location="/" mapping="/**/*.js" />
	<mvc:resources location="/" mapping="/**/*.css" />
	<mvc:resources location="/" mapping="/**/*.png" />
	<mvc:resources location="/" mapping="/**/*.jpg" />
	<mvc:resources location="/" mapping="/**/*.swf" />
	<mvc:resources location="/" mapping="/**/*.gif" />
<!--	<mvc:resources mapping="/static/**" location="/static/" />
	<mvc:resources mapping="/css/**" location="/css/" />
	<mvc:resources mapping="/js/**" location="/js/" />
	<mvc:resources location="/page/" mapping="/page/**" />-->

	<!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter" /><!-- JSON转换器 -->
			</list>
		</property>
	</bean>

	<!-- 配置映射器 -->
	<bean id="requestMappingHandlerMapping"
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"></bean>

	<!-- 配置适配器 -->
	<bean id="requestMappingHandlerAdapter"
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"></bean>

	<!-- use spring4-thymeleaf3.0.2 START -->
	<bean id="viewResolverThymeleaf" class="org.thymeleaf.spring4.view.ThymeleafViewResolver">
		<property name="templateEngine" ref="templateEngine" />
		<property name="characterEncoding" value="utf-8" />
		<property name="order" value="0" />
	</bean>

	<bean id="templateResolver"
		  class="org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver">
		<property name="prefix" value="/page/" />
		<property name="suffix" value=".html" />
		<!-- HTML is the default value, added here for the sake of clarity. -->
		<property name="templateMode" value="HTML5" />
		<!-- Template cache is true by default. Set to false if you want -->
		<!-- templates to be automatically updated when modified. -->
		<property name="cacheable" value="false" />
		<property name="characterEncoding" value="UTF-8" />
	</bean>

	<!-- SpringTemplateEngine automatically applies SpringStandardDialect and -->
	<!-- enables Spring's own MessageSource message resolution mechanisms. -->
	<bean id="templateEngine" class="org.thymeleaf.spring4.SpringTemplateEngine">
		<property name="templateResolver" ref="templateResolver" />
		<!-- Enabling the SpringEL compiler with Spring 4.2.4 or newer can speed
			up -->
		<!-- execution in most scenarios, but might be incompatible with specific -->
		<!-- cases when expressions in one template are reused across different
			data -->
		<!-- ypes, so this flag is "false" by default for safer backwards -->
		<!-- compatibility. -->
		<property name="enableSpringELCompiler" value="true" />
	</bean>
	<!-- 文件上传解析器 -->
	<bean id="multipartResolver"
		  class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="utf-8" />
		<!-- 资料上传切片设置为5M,这里设置6M -->
		<property name="maxUploadSize" value="6291456" />
		<property name="maxInMemorySize" value="4096" />
		<!--resolveLazily属性启用是为了推迟文件解析，以便在UploadController 中捕获文件大小异常 -->
		<property name="resolveLazily" value="true" />
	</bean>

</beans>